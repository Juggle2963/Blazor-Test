@using Blazor_Test.Models
@using Blazor_Test.Data
@using Blazor_Test.Services
@using CsvHelper
@using System.Globalization
@using System.ComponentModel.DataAnnotations
@using CsvHelper.Configuration


@page "/"
@inject MyDbContext myDbContext
@inject UserServices userServices
@inject CsvImportService csvImportService

<PageTitle>Home</PageTitle>

<InputFile OnChange="HandleFileSelected"/>



    @if (Records.Any())
{



<table class="table mt-3">
    <thead>
        <tr>
            <th>Name</th>
            <th>User</th>
            <th>Email</th>
            <th>Password</th>
            <th>Valid?</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var record in Records)
        {
            <tr>
                    <td class="@(record.Errors.Any(e => e.Contains("Name")) ? "text-danger" : "")">
                    @record.User.FullName
                </td>
                    <td class="@(record.Errors.Any(e => e.Contains("Username")) ? "text-danger" : "")">
                    @record.User.UserName
                </td>
                <td class="@(record.Errors.Any(e => e.Contains("Email")) ? "text-danger" : "")">
                    @record.User.Email
                </td>
                <td class="@(record.Errors.Any(e => e.Contains("Password")) ? "text-danger" : "")">
                    @record.User.Password
                </td>
                <td>
                    @(record.IsValid ? "✅" : "❌")
                </td>
            </tr>
        }
    </tbody>
</table>
<br />
    <button class="btn btn-primary" @onclick="Spara">Spara giltiga data till databas</button>
}

@code {



    private List <UserRecordValidation> Records = new();

    private async Task HandleFileSelected(InputFileChangeEventArgs e)
    {
        Records = await csvImportService.ImportAsync(e.File.OpenReadStream());

    }

    private async Task Spara()
    {
        List<User> send = new();
        foreach (var Item in Records)
        {
            if (Item.IsValid)
                send.Add(Item.User);
        }
        await userServices.SaveUsersAsync(send);

        Records.Clear(); //Dessa två tar bort tabell efter spara funktion körts

        StateHasChanged(); 
    }
    
}



